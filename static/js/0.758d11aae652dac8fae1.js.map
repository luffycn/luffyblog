{"version":3,"sources":["webpack:///src/views/home.vue","webpack:///./src/views/home.vue?cf3c","webpack:///./src/views/home.vue","webpack:///src/components/rightContent.vue","webpack:///./src/components/rightContent.vue?fd86","webpack:///./src/components/rightContent.vue","webpack:///src/components/textContent.vue","webpack:///./src/components/textContent.vue?f74b","webpack:///./src/components/textContent.vue","webpack:///./src/js/public/api.js"],"names":["home","name","data","carimges","adpics","textContentData","isReady","components","textContent","rightContent","mounted","that","this","Object","api","carData","spcData","listData","views_home","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","height","_l","item","index","key","to","params","src","img","_v","_s","title","mes","arr","textData","_e","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","components_rightContent","imgUrl","href","url","spccli","first","time","spc","othe","props","type","components_textContent","imgType","class","user","textType","creatTime","reader","great","method","success","arguments","length","undefined","getPageData","codeStyle","router"],"mappings":"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","file":"static/js/0.758d11aae652dac8fae1.js","sourcesContent":["<template>\r\n  <div class=\"home\" v-if=\"isReady\">\r\n    <div class=\"pc-box\">\r\n      <div class=\"carbox\">\r\n        <el-carousel height=\"100%\">\r\n          <el-carousel-item v-for=\"(item,index) in carimges\" :key=\"index\">\r\n            <router-link :to=\"{name:'arcontent',params:item}\" >\r\n              <img class=\"carimges\" :src=item.img>\r\n            </router-link>\r\n             <p>{{item.title}}</p>\r\n          </el-carousel-item>\r\n        </el-carousel>\r\n      </div>\r\n      <div class=\"adpic pc-opacity\">\r\n        <img :src=\"adpics.img[0]\" >\r\n        <p>{{adpics.mes[0]}}</p>\r\n      </div>\r\n      <div class=\"adpic pc-opacity\">\r\n        <img :src=\"adpics.img[1]\" >\r\n        <p>{{adpics.mes[1]}}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"comtent-box\">\r\n      <div class=\"right-box\">\r\n        <right-content></right-content>\r\n      </div>\r\n      <text-content v-for=\"(arr,index) in textContentData\" :key=\"index\" :textData=arr></text-content>\r\n      <div class=\"lk\"></div>\r\n    </div>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport textContent from '@/components/textContent'\r\nimport rightContent from '@/components/rightContent'\r\nimport Axios from '@/js/public/api'\r\nexport default {\r\n  name: 'home',\r\n  data () {\r\n    return {\r\n      carimges:[\r\n      ],\r\n      adpics:{},\r\n      textContentData:[],\r\n      isReady:false\r\n    }\r\n  },\r\n  components:{\r\n    textContent,rightContent\r\n  },\r\n  mounted(){\r\n    let that = this;\r\n    Axios('get','/home/getPageData','',function(data){\r\n      that.carimges=data.carData;\r\n      that.adpics=data.spcData;\r\n      that.textContentData = data.listData;\r\n      that.isReady=true;\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss' scoped>\r\n.el-carousel{height: 100%;}\r\n.home{font-size: .10rem;height: 100%;padding-top:.1rem;\r\n  .pc-box{height:44%!important;}\r\n  .carbox{display: inline-block;width:66%;height: 100%;overflow: hidden;float:left;\r\n    .carimges{width: 100%;height: 100%;position: relative;}\r\n     p{position: absolute;bottom: .25rem;left: 0;text-align: center;width: 100%;background: rgba(0, 0, 0, 0.536);color: white;font-size: .14rem;padding: \r\n    .03rem 0;overflow: hidden;white-space: nowrap;text-overflow: ellipsis;}\r\n  }\r\n  .adpic{width: 32%;float: right;height: 48%;margin-bottom:1.2%;\r\n    img{width: 100%;height: 100%;}\r\n    p{position: absolute;bottom: 0;left: 0;text-align: center;width: 100%;background: rgba(0, 0, 0, 0.536);color: white;font-size: .1rem;padding: \r\n    .03rem 0;overflow: hidden;white-space: nowrap;text-overflow: ellipsis;}\r\n  }\r\n  .comtent-box{display: block;width: 100%;overflow: hidden;}\r\n  .right-box{margin-top:.1rem;width: 26%;float: right;background: white;padding: 2% 3%;box-shadow:0 2px 5px 0 rgba(146, 146, 146, .1);}\r\n}\r\n\r\n.lk{height:150px;width: 66%;float: left;}\r\n\r\n \r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/home.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.isReady)?_c('div',{staticClass:\"home\"},[_c('div',{staticClass:\"pc-box\"},[_c('div',{staticClass:\"carbox\"},[_c('el-carousel',{attrs:{\"height\":\"100%\"}},_vm._l((_vm.carimges),function(item,index){return _c('el-carousel-item',{key:index},[_c('router-link',{attrs:{\"to\":{name:'arcontent',params:item}}},[_c('img',{staticClass:\"carimges\",attrs:{\"src\":item.img}})]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(item.title))])],1)}))],1),_vm._v(\" \"),_c('div',{staticClass:\"adpic pc-opacity\"},[_c('img',{attrs:{\"src\":_vm.adpics.img[0]}}),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.adpics.mes[0]))])]),_vm._v(\" \"),_c('div',{staticClass:\"adpic pc-opacity\"},[_c('img',{attrs:{\"src\":_vm.adpics.img[1]}}),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.adpics.mes[1]))])])]),_vm._v(\" \"),_c('div',{staticClass:\"comtent-box\"},[_c('div',{staticClass:\"right-box\"},[_c('right-content')],1),_vm._v(\" \"),_vm._l((_vm.textContentData),function(arr,index){return _c('text-content',{key:index,attrs:{\"textData\":arr}})}),_vm._v(\" \"),_c('div',{staticClass:\"lk\"})],2)]):_vm._e()}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-470db9b0\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/home.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-470db9b0\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!sass-resources-loader?{\\\"resources\\\":\\\"F:\\\\\\\\asd\\\\\\\\Luffy.github.io\\\\\\\\LuffyBlog\\\\\\\\src\\\\\\\\scss\\\\\\\\pcsubject.scss\\\"}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./home.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./home.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./home.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-470db9b0\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./home.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-470db9b0\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/home.vue\n// module id = null\n// module chunks = ","<template>\n  <div class=\"right-content\">\n    <div class=\"zhuanti pc-border-hover\">\n      <h2 class=\"hometitle\">特别推荐</h2>\n      <ul>\n        <li v-for=\"(arr,index) in spc\" :key=\"index\">\n          <i class=\"pc-opacity\">\n            <img :src='arr.imgUrl' >\n          </i>\n          <p>\n            {{arr.title}}\n            <span class=\"shaling\" ><a :href=arr.url>阅读</a></span>\n          </p>\n        </li>\n      </ul>\n    </div>\n\n    <div class=\"zhuanti pc-border-hover\">\n      <h2 class=\"hometitle\">点击排行</h2>\n      <ul>\n        <li>\n          <i class=\"pc-hover\">\n            <img :src='spccli.first.imgUrl'>\n          </i>\n           <h3 class=\"first-title\">{{spccli.first.title}}</h3>\n        </li>\n      </ul>\n      <ul class=\"sidenews\">\n        <li v-for=\"(arr,index) in spccli.othe\" :key=\"index\">\n          <i class=\"pc-hover\">\n            <img :src=\"arr.imgUrl\">\n          </i>\n          <h4>\n            <a href=\"\">{{arr.title}}</a>\n          </h4>\n          <span>{{arr.time}}</span>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'rightContent',\n  data () {\n    return {\n      spc:[\n        {imgUrl:'./static/imges/banner01.jpg',title:'VUE资源集合',url:''},\n        {imgUrl:'./static/imges/text01.jpg',title:'动画特效demo',url:''},\n        {imgUrl:'./static/imges/b07.jpg',title:'cavas绘画',url:''}\n      ],\n      spccli:{\n        first:{imgUrl:'./static/imges/text01.jpg',title:'移动web开放注意事项',url:''},\n        othe:[\n          {imgUrl:'./static/imges/11.jpg',title:'formitable中文API',time:'2017-06-13',url:''},\n          {imgUrl:'./static/imges/b06.jpg',title:'vue脚手架正确流程',time:'2017-11-22',url:''},\n          {imgUrl:'./static/imges/text02.jpg',title:'动画特效demo',time:'2018-05-07',url:''},\n        ]\n      }\n    }\n  },\n  mounted(){\n  }\n}\n</script>\n<style lang='scss' scoped>\n.right-content{font-size: .10rem;\n  .zhuanti{margin-bottom: 20px;overflow: hidden;\n    .hometitle{font-size: 18px;color: #282828;font-weight: 600;margin: 0;text-transform: uppercase;padding-bottom: 15px;margin-bottom: 25px;position: relative;\n      &::after{content: \"\";background-color: #282828;left: 0;width: 50px;height: 2px;bottom: 0;position: absolute;transition: 0.5s;}\n    }\n    ul{width: 100%;overflow: hidden;display: block;clear: both;\n      li{margin: 0 0 20px 0;overflow: hidden;position: relative;\n        i{display: block;\n          img{display: block;height:100%;width: 100%;transition: all .5s ease;}\n        }\n        p{pointer-events:none;position: absolute;top: 30%;left: 0;right: 0;color: #FFF;text-align: center;font-size: 15px;overflow: hidden;margin-top: 5px;padding: 0 40px;\n          span{width: 80px;margin: 10px auto;background: transparent;font-size: 12px;border: 1px solid #FFF;border-radius: 40px;padding: 4px 0;color: #FFF;display: block;\n          clear: both;transition: all .3s ease;\n            a{color: #fff}\n          }\n        }\n      }\n    }\n  }\n  .pc-opacity::after{height: 100%;}\n  .shaling{pointer-events: auto}\n  .shaling:hover{background: white;}\n  .shaling:hover>a{color: black}\n\n  \n  .first-title{pointer-events: none;position:absolute;font-style: normal;background:rgba(0,0,0,0.7);padding: 6px 0!important;color: white;text-align: center;font-size: .08rem;font-weight: normal;width: 100%;bottom: 0;}\n  \n  .sidenews{\n    li{margin: 0 0 20px 0;overflow: hidden;\n      i{width: 100px;height: 75px;overflow: hidden;display: block;border: #efefef 1px solid;float: left;margin-right: 10px;\n        img{height: 100%;max-height: 75px;margin: auto;transition: all .5s ease;}\n      }\n      h4{line-height: 24px;color: #888;font-size: 15px;overflow: hidden;text-overflow: ellipsis;-webkit-box-orient: vertical;display: -webkit-box;-webkit-line-clamp: 2;\n        a{color: #48494d}\n      }\n      span{font-size: 12px;color: #9A9A9A;margin-top: 10px;display: block;}\n    }\n  }\n}\n\n \n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/rightContent.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"right-content\"},[_c('div',{staticClass:\"zhuanti pc-border-hover\"},[_c('h2',{staticClass:\"hometitle\"},[_vm._v(\"特别推荐\")]),_vm._v(\" \"),_c('ul',_vm._l((_vm.spc),function(arr,index){return _c('li',{key:index},[_c('i',{staticClass:\"pc-opacity\"},[_c('img',{attrs:{\"src\":arr.imgUrl}})]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n          \"+_vm._s(arr.title)+\"\\n          \"),_c('span',{staticClass:\"shaling\"},[_c('a',{attrs:{\"href\":arr.url}},[_vm._v(\"阅读\")])])])])}))]),_vm._v(\" \"),_c('div',{staticClass:\"zhuanti pc-border-hover\"},[_c('h2',{staticClass:\"hometitle\"},[_vm._v(\"点击排行\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('i',{staticClass:\"pc-hover\"},[_c('img',{attrs:{\"src\":_vm.spccli.first.imgUrl}})]),_vm._v(\" \"),_c('h3',{staticClass:\"first-title\"},[_vm._v(_vm._s(_vm.spccli.first.title))])])]),_vm._v(\" \"),_c('ul',{staticClass:\"sidenews\"},_vm._l((_vm.spccli.othe),function(arr,index){return _c('li',{key:index},[_c('i',{staticClass:\"pc-hover\"},[_c('img',{attrs:{\"src\":arr.imgUrl}})]),_vm._v(\" \"),_c('h4',[_c('a',{attrs:{\"href\":\"\"}},[_vm._v(_vm._s(arr.title))])]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(arr.time))])])}))])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0b78d1ac\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/rightContent.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0b78d1ac\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!sass-resources-loader?{\\\"resources\\\":\\\"F:\\\\\\\\asd\\\\\\\\Luffy.github.io\\\\\\\\LuffyBlog\\\\\\\\src\\\\\\\\scss\\\\\\\\pcsubject.scss\\\"}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./rightContent.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./rightContent.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./rightContent.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0b78d1ac\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./rightContent.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0b78d1ac\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/rightContent.vue\n// module id = null\n// module chunks = ","<template>\n  <div class=\"text-content\">\n    <router-link :to=\"{name:'arcontent',params:textData}\" >\n      <div class=\"text-box\">\n        <h1>{{textData.title}}</h1>\n        <div v-if=\"textData.imgType!='noImg'\" :class=\"textData.imgType == 'bigImg'?'big-img pc-opacity':'sm-img pc-hover'\" >\n          <img :src=textData.imgUrl>\n        </div>\n        <p>{{textData.mes}}</p>\n        <p class=\"messe\">\n          <i class=\"iconfont icon-yonghu01\"></i>{{textData.user}}\n          <i class=\"iconfont icon-icon\"></i>{{textData.textType}}\n          <i class=\"iconfont icon-shijian\"></i>{{textData.creatTime}}\n          <i class=\"iconfont icon-yuedu\"></i>{{textData.reader}}已阅读\n          <i class=\"iconfont icon-dianzan21\"></i>{{textData.great}}\n        </p>\n      </div>\n    </router-link>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'textContent',\n  data () {\n    return {\n    }\n  },\n  props:{\n      textData: {\n      type: Object,\n    }\n  },\n  mounted(){\n  }\n}\n</script>\n<style lang='scss' scoped>\n.text-content{font-size: .10rem;margin-top:.1rem;width: 66%;float: left;background: white;\n  .text-box{padding:.08rem;overflow: hidden;padding-bottom: 20px;box-shadow: 0 2px 5px 0 rgba(146, 146, 146, .1);transition: all 0.6s ease;\n    h1{font-size: .12rem;border-bottom: 1px solid #bb9860;color: #555;}\n    .sm-img{float: left;width: 25%;max-height: 170px;margin-right: .1rem;margin-top:.1rem;display: block;overflow: hidden;\n      img{width: 100%;height: 100%;}\n    }\n    .big-img{width: 100%;max-height: 170px;margin-right: .1rem;margin-top:.1rem;display: block;overflow: hidden;\n      img{width: 100%;height: 100%;}\n    }\n    p{font-size: .07rem;color: #566573;overflow: hidden;text-overflow: ellipsis;-webkit-box-orient: vertical;display: -webkit-box;-webkit-line-clamp: 3;margin-top: .1rem;}\n       .messe{font-size: .06rem}\n    .iconfont{font-size: .08rem!important;margin:0 .02rem 0 .07rem;vertical-align: text-top;}\n  }\n}\n\n \n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/textContent.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"text-content\"},[_c('router-link',{attrs:{\"to\":{name:'arcontent',params:_vm.textData}}},[_c('div',{staticClass:\"text-box\"},[_c('h1',[_vm._v(_vm._s(_vm.textData.title))]),_vm._v(\" \"),(_vm.textData.imgType!='noImg')?_c('div',{class:_vm.textData.imgType == 'bigImg'?'big-img pc-opacity':'sm-img pc-hover'},[_c('img',{attrs:{\"src\":_vm.textData.imgUrl}})]):_vm._e(),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.textData.mes))]),_vm._v(\" \"),_c('p',{staticClass:\"messe\"},[_c('i',{staticClass:\"iconfont icon-yonghu01\"}),_vm._v(_vm._s(_vm.textData.user)+\"\\n        \"),_c('i',{staticClass:\"iconfont icon-icon\"}),_vm._v(_vm._s(_vm.textData.textType)+\"\\n        \"),_c('i',{staticClass:\"iconfont icon-shijian\"}),_vm._v(_vm._s(_vm.textData.creatTime)+\"\\n        \"),_c('i',{staticClass:\"iconfont icon-yuedu\"}),_vm._v(_vm._s(_vm.textData.reader)+\"已阅读\\n        \"),_c('i',{staticClass:\"iconfont icon-dianzan21\"}),_vm._v(_vm._s(_vm.textData.great)+\"\\n      \")])])])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-aeb8b4ea\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/textContent.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-aeb8b4ea\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!sass-resources-loader?{\\\"resources\\\":\\\"F:\\\\\\\\asd\\\\\\\\Luffy.github.io\\\\\\\\LuffyBlog\\\\\\\\src\\\\\\\\scss\\\\\\\\pcsubject.scss\\\"}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./textContent.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./textContent.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./textContent.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-aeb8b4ea\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./textContent.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-aeb8b4ea\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/textContent.vue\n// module id = null\n// module chunks = ","// /* eslint-disable */\r\n// /**\r\n//  * axios 访问后台封装，拦截处理等\r\n//  * Luffy 2018-7-27\r\n//  */\r\n// import Vue from 'vue'\r\n// import { router, CONST, tools, storages, axios, store } from '@/js/public/port'\r\n\r\n// // 路由拦截器\r\n// router.beforeEach((to, from, next) => {\r\n//     next();\r\n// })\r\n\r\n// axios.defaults.timeout = 10000\r\n// axios.defaults.responseType = \"json\"\r\n// axios.defaults.withCredentials = true // 是否允许带cookie这些\r\n// axios.defaults.headers = {\r\n//     \"Tech\": \"VUE\", //说明从Vue过去的请求,\r\n//     \"X-Requested-With\": \"XMLHttpRequest\",\r\n//     \"Content-Type\": \"application/json;charset=UTF-8\"\r\n// }\r\n\r\n// let removeUser = function () {\r\n//     storages.removeSession(\"user\");\r\n//     storages.removeSession(\"userName\");\r\n//     storages.removeSession(\"money\");\r\n// }\r\n\r\n// // 添加请求拦截器\r\n// axios.interceptors.request.use(function (config) {\r\n//     return config;\r\n// }, function (error) {\r\n//     return Promise.reject(error);\r\n// });\r\n\r\n// //返回状态判断(响应拦截器)\r\n// axios.interceptors.response.use(\r\n//     res => {\r\n//         //对响应数据处理\r\n//         if (res.data && !res.data.success) {\r\n//             return Promise.reject(res.data.msg === null ? res.data.message : res.data.msg)\r\n//         }\r\n//         return res.data\r\n//     },\r\n//     error => {\r\n//         return Promise.reject(error.response.status)\r\n//     }\r\n\r\n// )\r\n\r\n// const Axios = (method, url, data, success, showload = true) => {\r\n//     data = filterParams(data);\r\n//     // let params = null;\r\n//     // if (method === 'get') {\r\n//     //     params = data;\r\n//     //     data = null;\r\n//     // } else {\r\n//     //     data = JSON.stringify(data);\r\n//     // }\r\n//     let params = data;\r\n//     axios({\r\n//         method,\r\n//         url,\r\n//         baseURL: CONST.AGENCY,\r\n//         data,\r\n//         params,\r\n//         withCredentials: true,\r\n//         // onUploadProgress: function (progressEvent) {\r\n//         //     // 对原生进度事件的处理\r\n//         //   },\r\n//         transformRequest: [function (data) {\r\n//             if (showload) {\r\n//                 store.commit('showLoading',true);\r\n//             }\r\n//             return data;\r\n\r\n//         }],\r\n//         transformResponse: [function (data) {\r\n//             store.commit('showLoading',false);\r\n//             return data;\r\n\r\n//         }],\r\n//     }).then(function (response) {\r\n//         success(true, response.data);\r\n//     }).catch(function (error) {\r\n//         if (error.response) {\r\n//             // 请求已发出，但服务器响应的状态码不在 2xx 范围内\r\n//             tools.showMessege(getErrMess(error.response.status));\r\n//             success(false, getErrMess(error.response.status))\r\n//         } else {\r\n//             // Something happened in setting up the request that triggered an Error\r\n//             tools.showMessege(error.message);\r\n//             success(false, error.message);\r\n//         }\r\n//     });\r\n// }\r\n\r\n\r\n\r\n// const filterParams = (params) => { //过滤处理参数\r\n//     for (let index in params) {\r\n//         if (params[index] === null)\r\n//             delete params[index];\r\n//         else {\r\n//             switch (typeof (params[index])) {\r\n//                 case 'string':\r\n//                     params[index] = params[index].trim();\r\n//                     break;\r\n//                 case 'object':\r\n//                     params[index] = filterParams(params[index]);\r\n//                     break;\r\n//                 case 'array':\r\n//                     params[index] = filterParams(params[index]);\r\n//                     break;\r\n//             }\r\n//         }\r\n//     }\r\n//     return params;\r\n\r\n// }\r\n\r\n\r\n// const getErrMess = (status) => {\r\n//     switch (status) {\r\n//         case 600:\r\n//             removeUser()\r\n//             return '登录状态信息过期,请重新登录'\r\n//         case 606:\r\n//             removeUser()\r\n//             return '您的账号，在别处登录，已踢出'\r\n//         case 607:\r\n//             removeUser()\r\n//             return '网站维护'\r\n//         case 400:\r\n//             return '错误的请求'\r\n//         case 407:\r\n//             return '资源未授权'\r\n//         case 403:\r\n//             return '所在地区禁止访问'\r\n//         case 404:\r\n//             return '资源不存在'\r\n//         case 500:\r\n//             return '服务出错了'\r\n//         case 502:\r\n//             return '服务器暂时不可用'\r\n//         case 503:\r\n//             return '服务忙'\r\n//         case 504:\r\n//             return '请求超时'\r\n//         case 701: // 无效的授权\r\n//             return '登录已过期'\r\n//         case 702:\r\n//             return '账号未激活'\r\n//         case 703:\r\n//             return '账号被冻结'\r\n//         case 704:\r\n//             return '账号已停用'\r\n//         case 705:\r\n//             return '账号审核失败'\r\n//         case 706:\r\n//             return '账号被踢出'\r\n//         case 707:\r\n//             return '非法的授权'\r\n//         case 708:\r\n//             return '账号密码错误'\r\n//         case 709:\r\n//             return '登录超时请重新登录'\r\n//     }\r\n// }\r\nconst Axios = (method, url, data, success, showload = true) => {\r\n    switch (url) {\r\n        case '/home/getPageData':\r\n            success(getPageData);\r\n            break;\r\n    }\r\n\r\n};\r\nexport default Axios\r\n\r\n\r\nconst codeStyle = 'user-select:text;word-break:break-all;display:block;font-size:.08rem;line-height:22px;overflow-x:auto;white-space:pre;word-wrap:break-word;border-radius:4px;padding:8px;background:#f3dcb3a8'\r\n\r\nconst getPageData = {\r\n    carData: [\r\n        {\r\n            img: './static/imges/banner02.jpg', title: 'vuex详解', mes: `\r\n        vuex是什么？\r\n        先引用vuex官网的话：\r\n        Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。\r\n        状态管理模式、集中式存储管理 一听就很高大上，蛮吓人的。在我看来 vuex 就是把需要共享的变量全部存储在一个对象里面，然后将这个对象放在顶层组件中供其他组件使用。这么说吧，将vue想作是一个js文件、组件是函数，那么vuex就是一个全局变量，只是这个“全局变量”包含了一些特定的规则而已。\r\n        在vue的组件化开发中，经常会遇到需要将当前组件的状态传递给其他组件。父子组件通信时，我们通常会采用 props + emit 这种方式。但当通信双方不是父子组件甚至压根不存在相关联系，或者一个状态需要共享给多个组件时，就会非常麻烦，数据也会相当难维护，这对我们开发来讲就很不友好。vuex 这个时候就很实用，不过在使用vuex之后也带来了更多的概念和框架，需慎重！\r\n        vuex里面都有些什么内容？\r\n        Talk is cheap,Show me the code. 先来一段代码间隔下这么多的文字：\r\n        <code style=${codeStyle}>\r\n        const store = new Vuex.Store({\r\n            state: {\r\n                name: 'weish',\r\n                age: 22\r\n            },\r\n            getters: {\r\n                personInfo(state) {\r\n                    return 'My name is &yen;{state.name}, I am &yen;{state.age}';\r\n                }\r\n            }\r\n            mutations: {\r\n                SET_AGE(state, age) {\r\n                    commit(age, age);\r\n                }\r\n            },\r\n            actions: {\r\n                nameAsyn({commit}) {\r\n                    setTimeout(() => {\r\n                        commit('SET_AGE', 18);\r\n                    }, 1000);\r\n                }\r\n            },\r\n            modules: {\r\n                a: modulesA\r\n            }\r\n        }\r\n        <code>\r\n        这个就是最基本也是完整的vuex代码；vuex 包含有五个基本的对象：\r\n        \r\n        state：存储状态。也就是变量；\r\n        getters：派生状态。也就是set、get中的get，有两个可选参数：state、getters分别可以获取state中的变量和其他的getters。外部调用方式：store.getters.personInfo()。就和vue的computed差不多；\r\n        mutations：提交状态修改。也就是set、get中的set，这是vuex中唯一修改state的方式，但不支持异步操作。第一个参数默认是state。外部调用方式：store.commit('SET_AGE', 18)。和vue中的methods类似。\r\n        actions：和mutations类似。不过actions支持异步操作。第一个参数默认是和store具有相同参数属性的对象。外部调用方式：store.dispatch('nameAsyn')。\r\n        modules：store的子模块，内容就相当于是store的一个实例。调用方式和前面介绍的相似，只是要加上当前子模块名，如：store.a.getters.xxx()。\r\n        vue-cli中使用vuex的方式\r\n        一般来讲，我们都会采用vue-cli来进行实际的开发，在vue-cli中，开发和调用方式稍微不同。\r\n        \r\n        ├── index.html\r\n        ├── main.js\r\n        ├── components\r\n        └── store\r\n            ├── index.js          # 我们组装模块并导出 store 的地方\r\n            ├── state.js          # 跟级别的 state\r\n            ├── getters.js        # 跟级别的 getter\r\n            ├── mutation-types.js # 根级别的mutations名称（官方推荐mutions方法名使用大写）\r\n            ├── mutations.js      # 根级别的 mutation\r\n            ├── actions.js        # 根级别的 action\r\n            └── modules\r\n                ├── m1.js         # 模块1\r\n                └── m2.js         # 模块2\r\n        state.js示例：\r\n        \r\n        const state = {\r\n            name: 'weish',\r\n            age: 22\r\n        };\r\n        \r\n        export default state;\r\n        getters.js示例（我们一般使用getters来获取state的状态，而不是直接使用state）：\r\n        \r\n        export const name = (state) => {\r\n            return state.name;\r\n        }\r\n        \r\n        export const age = (state) => {\r\n            return state.age\r\n        }\r\n        \r\n        export const other = (state) => {\r\n            return 'My name is &yen;{state.name}, I am &yen;{state.age}.';\r\n        }\r\n        mutation-type.js示例（我们会将所有mutations的函数名放在这个文件里）：\r\n        \r\n        export const SET_NAME = 'SET_NAME';\r\n        export const SET_AGE = 'SET_AGE';\r\n        mutations.js示例：\r\n        \r\n        import * as types from './mutation-type.js';\r\n        \r\n        export default {\r\n            [types.SET_NAME](state, name) {\r\n                state.name = name;\r\n            },\r\n            [types.SET_AGE](state, age) {\r\n                state.age = age;\r\n            }\r\n        };\r\n        actions.js示例（异步操作、多个commit时）：\r\n        \r\n        import * as types from './mutation-type.js';\r\n        \r\n        export default {\r\n            nameAsyn({commit}, {age, name}) {\r\n                commit(types.SET_NAME, name);\r\n                commit(types.SET_AGE, age);\r\n            }\r\n        };\r\n        modules--m1.js示例（如果不是很复杂的应用，一般来讲是不会分模块的）：\r\n        \r\n        export default {\r\n            state: {},\r\n            getters: {},\r\n            mutations: {},\r\n            actions: {}\r\n        };\r\n        index.js示例（组装vuex）：\r\n        \r\n        import vue from 'vue';\r\n        import vuex from 'vuex';\r\n        import state from './state.js';\r\n        import * as getters from './getters.js';\r\n        import mutations from './mutations.js';\r\n        import actions from './actions.js';\r\n        import m1 from './modules/m1.js';\r\n        import m2 from './modules/m2.js';\r\n        import createLogger from 'vuex/dist/logger'; // 修改日志\r\n        \r\n        vue.use(vuex);\r\n        \r\n        const debug = process.env.NODE_ENV !== 'production'; // 开发环境中为true，否则为false\r\n        \r\n        export default new vuex.Store({\r\n            state,\r\n            getters,\r\n            mutations,\r\n            actions,\r\n            modules: {\r\n                m1,\r\n                m2\r\n            },\r\n            plugins: debug ? [createLogger()] : [] // 开发环境下显示vuex的状态修改\r\n        });\r\n        最后将store实例挂载到main.js里面的vue上去就行了\r\n        \r\n        import store from './store/index.js';\r\n        \r\n        new Vue({\r\n          el: '#app',\r\n          store,\r\n          render: h => h(App)\r\n        });\r\n        在vue组件中使用时，我们通常会使用mapGetters、mapActions、mapMutations，然后就可以按照vue调用methods和computed的方式去调用这些变量或函数，示例如下：\r\n        \r\n        import {mapGetters, mapMutations, mapActions} from 'vuex';\r\n        \r\n        /* 只写组件中的script部分 */\r\n        export default {\r\n            computed: {\r\n                ...mapGetters([\r\n                    name,\r\n                    age\r\n                ])\r\n            },\r\n            methods: {\r\n                ...mapMutations({\r\n                    setName: 'SET_NAME',\r\n                    setAge: 'SET_AGE'\r\n                }),\r\n                ...mapActions([\r\n                    nameAsyn\r\n                ])\r\n            }\r\n        };\r\n        总结\r\n        以上就是vuex 的相关知识，其实vuex很简单，多用几次就会熟悉了。\r\n        \r\n        ` },\r\n        {\r\n            img: './static/imges/banner01.jpg', title: '移动web开发注意事项', mes: `\r\n        这有一篇总结的很全的文章,就直接拿过来方便以后看吧...\r\n        <a href='www.baidu.com'>https://www.cnblogs.com/baihuaxiu/p/6654496.html</a>` },\r\n        {\r\n            img: './static/imges/toppic02.jpg', title: 'vue-router 基本使用', mes: `\r\n            　  路由，其实就是指向的意思，当我点击页面上的home按钮时，页面中就要显示home的内容，如果点击页面上的about 按钮，页面中就要显示about 的内容。Home按钮  => home 内容， about按钮 => about 内容，也可以说是一种映射. 所以在页面上有两个部分，一个是点击部分，一个是点击之后，显示内容的部分,点击之后，怎么做到正确的对应，比如，我点击home 按钮，页面中怎么就正好能显示home的内容。这就要在js 文件中配置路由。。\r\n                <code style=${codeStyle}>\r\n　　路由中有三个基本的概念 route, routes, router。\r\n\r\n　　　　1， route，它是一条路由，由这个英文单词也可以看出来，它是单数， Home按钮  => home内容， 这是一条route,  about按钮 => about 内容， 这是另一条路由。\r\n\r\n　　　　2， routes 是一组路由，把上面的每一条路由组合起来，形成一个数组。[{home 按钮 =>home内容 }， { about按钮 => about 内容}]\r\n\r\n　　　　3， router 是一个机制，相当于一个管理者，它来管理路由。因为routes 只是定义了一组路由，它放在哪里是静止的，当真正来了请求，怎么办？ 就是当用户点击home 按钮的时候，怎么办？这时router 就起作用了，它到routes 中去查找，去找到对应的 home 内容，所以页面中就显示了 home 内容。\r\n\r\n　　　　4，客户端中的路由，实际上就是dom 元素的显示和隐藏。当页面中显示home 内容的时候，about 中的内容全部隐藏，反之也是一样。客户端路由有两种实现方式：基于hash 和基于html5 history api.\r\n\r\n　　vue-router中的路由也是基于上面的内容来实现的\r\n\r\n　　在vue中实现路由还是相对简单的。因为我们页面中所有内容都是组件化的，我们只要把路径和组件对应起来就可以了，然后在页面中把组件渲染出来。\r\n\r\n　　1， 页面实现（html模版中）\r\n\r\n　　　　在vue-router中, 我们看到它定义了两个标签<router-link> 和<router-view>来对应点击和显示部分。<router-link> 就是定义页面中点击的部分，<router-view> 定义显示部分，就是点击后，区配的内容显示在什么地方。所以 <router-link> 还有一个非常重要的属性 to，定义点击之后，要到哪里去， 如：<router-link  to=\"/home\">Home</router-link>\r\n\r\n　　2， js 中配置路由\r\n\r\n　　　　首先要定义route,  一条路由的实现。它是一个对象，由两个部分组成： path和component.  path 指路径，component 指的是组件。如：{path:’/home’, component: home}\r\n\r\n　　　　我们这里有两条路由，组成一个routes: \r\n\r\nconst routes = [\r\n  { path: '/home', component: Home },\r\n  { path: '/about', component: About }\r\n]\r\n　　最后创建router 对路由进行管理，它是由构造函数 new vueRouter() 创建，接受routes 参数。\r\n\r\nconst router = new VueRouter({\r\n      routes // routes: routes 的简写\r\n})\r\n　　配置完成后，把router 实例注入到 vue 根实例中,就可以使用路由了\r\n\r\nconst app = new Vue({\r\n  router\r\n}).$mount('#app')\r\n　　执行过程：当用户点击 router-link 标签时，会去寻找它的 to 属性， 它的 to 属性和 js 中配置的路径{ path: '/home', component: Home}  path 一一对应，从而找到了匹配的组件， 最后把组件渲染到 <router-view> 标签所在的地方。所有的这些实现才是基于hash 实现的。\r\n\r\n vue-cli 创建一个项目体验一下, 当然不要忘记安装vue-router\r\n\r\n　　1, 在src 目录下新建两个组件，home.vue 和 about.vue\r\n\r\n\r\n<template>\r\n    <div>\r\n        <h1>home</h1>\r\n        <p>{{msg}}</p>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        data () {\r\n            return {\r\n                msg: \"我是home 组件\"\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n\r\n<template>\r\n    <div>\r\n        <h1>about</h1>\r\n        <p>{{aboutMsg}}</p>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        data () {\r\n            return {\r\n                aboutMsg: '我是about组件'\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n　　2, 在 App.vue中 定义<router-link > 和 </router-view>  \r\n\r\n\r\n<template>\r\n  <div id=\"app\">\r\n    <img src=\"./assets/logo.png\">\r\n    <header>\r\n    <!-- router-link 定义点击后导航到哪个路径下 -->\r\n      <router-link to=\"/home\">Home</router-link>\r\n      <router-link to=\"/about\">About</router-link>\r\n    </header>\r\n    <!-- 对应的组件内容渲染到router-view中 -->\r\n    <router-view></router-view>   \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  \r\n}\r\n</script>\r\n\r\n　　3,  在 src目录下再新建一个router.js 定义router, 就是定义 路径到 组件的 映射。\r\n\r\n\r\nimport Vue from \"vue\";\r\nimport VueRouter from \"vue-router\";\r\n\r\n// 引入组件\r\nimport home from \"./home.vue\";\r\nimport about from \"./about.vue\";\r\n\r\n// 要告诉 vue 使用 vueRouter\r\nVue.use(VueRouter);\r\n\r\nconst routes = [\r\n    {\r\n        path:\"/home\",\r\n        component: home\r\n    },\r\n    {\r\n        path: \"/about\",\r\n        component: about\r\n    }\r\n]\r\n\r\nvar router =  new VueRouter({\r\n    routes\r\n})\r\nexport default router;\r\n\r\n　　4， 把路由注入到根实例中，启动路由。这里其实还有一种方法，就像vuex  store 注入到根实例中一样，我们也可以把vueRouter 直接注入到根实例中。在main.js中引入路由，注入到根实例中。\r\n\r\n\r\nimport Vue from 'vue'\r\nimport App from './App.vue'\r\n\r\n// 引入路由\r\nimport router from \"./router.js\"    // import router 的router 一定要小写， 不要写成Router, 否则报 can't match的报错\r\nnew Vue({\r\n  el: '#app',\r\n  router,  // 注入到根实例中\r\n  render: h => h(App)\r\n})\r\n\r\n　　5， 这时点击页面上的home 和about 可以看到组件来回切换。但是有一个问题，当首次进入页面的时候，页面中并没有显示任何内容。这是因为首次进入页面时，它的路径是 '/'，我们并没有给这个路径做相应的配置。一般，页面一加载进来都会显示home页面，我们也要把这个路径指向home组件。但是如果我们写{ path: '/', component: Home },vue 会报错，因为两条路径却指向同一个方向。这怎么办？这需要重定向，所谓重定向，就是重新给它指定一个方向，它本来是访问 / 路径，我们重新指向‘/home’, 它就相当于访问 '/home', 相应地, home组件就会显示到页面上。vueRouter中用 redirect 来定义重定向。\r\n\r\n\r\nconst routes = [\r\n    {\r\n        path:\"/home\",\r\n        component: home\r\n    },\r\n    {\r\n        path: \"/about\",\r\n        component: about\r\n    },\r\n    // 重定向\r\n    {\r\n        path: '/', \r\n        redirect: '/home' \r\n    }\r\n]\r\n\r\n　　现在页面正常了，首次进入显示home, 并且点击也可以看到内容的切换。\r\n\r\n6， 最后，我们看一下路由是怎么实现的\r\n\r\n　　打开浏览器控制台，首先看到 router-link 标签渲染成了 a 标签，to 属性变成了a 标签的 href 属性，这时就明白了点击跳转的意思。router-view 标签渲染成了我们定义的组件，其实它就是一个占位符，它在什么地方，匹配路径的组件就在什么地方，所以 router-link 和router-view 标签一一对应，成对出现。\r\n\r\n\r\n\r\n　　这里还看到，当点击Home和About 来回切换时，a 标签有一个样式类 .router-link-active 也在来回切换， 原来这是当router-link 处于选中状态时，vueRouter 会自动添加这个类，因此我们也可以利用这个类来改变选中时的状态，如选中时，让它变成红色。但当设置 .router-link-active {color: red;}，它并没有生效，这时还要在类前面加一个a, a.router-link-active {color: red;}, 这样就没有问题了。未处于选中状态的router-link， 我们也想给它更改样式，怎么办? 直接给它添加一个 class 就可以了， <router-link class=\"red\">Home</router-link>\r\n\r\n动态路由\r\n\r\n　　上面我们定义的路由，都是严格匹配的，只有router-link 中的to属性和 js 中一条路由route中 path 一模一样，才能显示相应的组件component. 但有时现实却不是这样的，当我们去访问网站并登录成功后，它会显示 欢迎你，+ 你的名字。不同的用户登录， 只是显示“你的名字” 部分不同，其它部分是一样的。这就表示，它是一个组件，假设是user组件。不同的用户（就是用户的id不同），它都会导航到同一个user  组件中。这样我们在配置路由的时候，就不能写死, 就是路由中的path属性，不能写死，那要怎么设置? 导航到 user 组件，路径中肯定有user, id 不同，那就给路径一个动态部分来匹配不同的id.  在vue-router中，动态部分 以 : 开头，那么路径就变成了 /user/:id, 这条路由就可以这么写：  { path:\"/user/:id\", component: user }.\r\n\r\n　　我们定义一个user组件（自己随便写一个就好了），页面中再添加两个router-link 用于导航， 最后router.js中添加路由配置，来体验一下\r\n\r\n　　app.vue 中添加两个router-link：\r\n\r\n\r\n<template>\r\n  <div id=\"app\">\r\n    <img src=\"./assets/logo.png\">\r\n    <header>\r\n      <router-link to=\"/home\">Home</router-link>\r\n      <router-link to=\"/about\">About</router-link>\r\n     <!--  增加两个到user组件的导航，可以看到这里使用了不同的to属性 -->\r\n      <router-link to=\"/user/123\">User123</router-link>\r\n      <router-link to=\"/user/456\">User456</router-link>\r\n    </header>\r\n    <router-view></router-view>   \r\n  </div>\r\n</template>\r\n\r\nrouter.js 配置user动态路由：\r\n\r\n\r\nconst routes = [\r\n    {\r\n        path:\"/home\",\r\n        component: home\r\n    },\r\n    {\r\n        path: \"/about\",\r\n        component: about\r\n    },\r\n    /*新增user路径，配置了动态的id*/\r\n    {\r\n        path: \"/user/:id\",\r\n        component: user\r\n    },\r\n    {\r\n        path: '/', \r\n        redirect: '/home' \r\n    }\r\n]\r\n\r\n　　user组件\r\n\r\n\r\n<template>\r\n    <div>\r\n        <h1>User</h1>\r\n        <div>我是user组件</div>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n\r\n    }\r\n</script>\r\n\r\n　　这时在页面中点击user123 和user456, 可以看到它们都导航到user组件，配置正确。 　　\r\n\r\n　　在动态路由中，怎么获取到动态部分？ 因为在组件中是可以显示不同部分的，就是上面提到的“你的名字”。其实，当整个vue-router 注入到根实例后，在组件的内部，可以通过this.$route 来获取到 router 实例。它有一个params 属性，就是来获得这个动态部分的。它是一个对象，属性名，就是路径中定义的动态部分 id, 属性值就是router-link中to 属性中的动态部分，如123。使用vuex时，组件中想要获取到state 中的状态，是用computed 属性，在这里也是一样，在组件中，定义一个computed 属性dynamicSegment， user 组件修改如下：\r\n\r\n\r\n<template>\r\n    <div>\r\n        <h1>User</h1>\r\n        <div>我是user组件, 动态部分是{{dynamicSegment}}</div>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        computed: {\r\n            dynamicSegment () {\r\n                return this.$route.params.id\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n　　这里还有最后一个问题，就是动态路由在来回切换时，由于它们都是指向同一组件，vue不会销毁再创建这个组件，而是复用这个组件，就是当第一次点击（如：user123）的时候，vue 把对应的组件渲染出来，但在user123, user456点击来回切换的时候，这个组件就不会发生变化了，组件的生命周期不管用了。这时如果想要在组件来回切换的时候做点事情，那么只能在组件内部（user.vue中）利用watch 来监听$route 的变化。把上面的代码用监听$route 实现\r\n\r\n\r\n<script>\r\n    export default {\r\n        data () {\r\n            return {\r\n                dynamicSegment: ''\r\n            }\r\n        },\r\n        watch: {\r\n            $route (to,from){\r\n                // to表示的是你要去的那个组件，from 表示的是你从哪个组件过来的，它们是两个对象，你可以把它打印出来，它们也有一个param 属性\r\n                console.log(to);\r\n                console.log(from);\r\n                this.dynamicSegment = to.params.id\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n嵌套路由\r\n\r\n　　嵌套路由，主要是由我们的页面结构所决定的。当我们进入到home页面的时候，它下面还有分类，如手机系列，平板系列，电脑系列。当我们点击各个分类的时候，它还是需要路由到各个部分，如点击手机，它肯定到对应到手机的部分。\r\n\r\n　　在路由的设计上，首先进入到 home ,然后才能进入到phone, tablet, computer.  Phone, tablet, compute 就相当于进入到了home的子元素。所以vue  提供了childrens 属性，它也是一组路由,相当于我们所写的routes。\r\n\r\n　　首先，在home页面上定义三个router-link 标签用于导航，然后再定义一个router-view标签，用于渲染对应的组件。router-link 和router-view 标签要一一对应。home.vue 组件修改如下：\r\n\r\n\r\n<template>\r\n    <div>\r\n        <h1>home</h1>\r\n<!-- router-link 的to属性要注意，路由是先进入到home,然后才进入相应的子路由如 phone,所以书写时要把 home 带上 -->\r\n        <p>\r\n            <router-link to=\"/home/phone\">手机</router-link>\r\n            <router-link to=\"/home/tablet\">平板</router-link>\r\n            <router-link to=\"/home/computer\">电脑</router-link>\r\n        </p>\r\n        <router-view></router-view>\r\n    </div>\r\n</template>\r\n\r\nrouter.js 配置路由，修改如下：\r\n\r\n\r\nconst routes = [\r\n    {\r\n        path:\"/home\",\r\n　　　　　// 下面这个属性也不少，因为，我们是先进入home页面，才能进入子路由\r\n        component: home,\r\n　　　　 // 子路由\r\n        children: [\r\n            {\r\n                path: \"phone\",\r\n                component: phone\r\n            },\r\n            {\r\n                path: \"tablet\",\r\n                component: tablet\r\n            },\r\n            {\r\n                path: \"computer\",\r\n                component: computer\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        path: \"/about\",\r\n        component: about\r\n    },\r\n    {\r\n        path: \"/user/:id\",\r\n        component: user\r\n    },\r\n    {\r\n        path: '/', \r\n        redirect: '/home' \r\n    }\r\n]\r\n\r\n　　这时当我们点击home 时，它下面出现手机等字样，但没有任何对应的组件进行显示，这通常不是我们想要的。要想点击home时，要想渲染相对应的子组件，那还需要配置一条路由。当进入到home 时，它在children中对应的路由path 是空 ‘’，完整的childrens 如下：\r\n\r\n\r\nchildren: [\r\n    {\r\n        path: \"phone\",\r\n        component: phone\r\n    },\r\n    {\r\n        path: \"tablet\",\r\n        component: tablet\r\n    },\r\n    {\r\n        path: \"computer\",\r\n        component: computer\r\n    },\r\n    // 当进入到home时，下面的组件显示\r\n    {\r\n        path: \"\",\r\n        component: phone\r\n    }\r\n]\r\n\r\n命名路由\r\n\r\n　　命名路由，很简单，因为根据名字就可以知道，这个路由有一个名字，那就直接给这个路由加一个name 属性，就可以了。 给user 路由加一个name 属性：\r\n\r\n{\r\n        path: \"/user/:id\",\r\n        name: \"user\",\r\n        component: user\r\n}\r\n　　命名路由的使用, 在router-link 中to 属性就可以使用对象了, \r\n\r\n <router-link to=\"/user/123\">User123</router-link> // 和下面等价 \r\n <router-link :to=\"{ name: 'user', params: { userId: 123 }}\">User</router-link>   // 当使用对象作为路由的时候，to前面要加一个冒号,表示绑定\r\n　　编程式导航：这主要应用到按钮点击上。当点击按钮的时候，跳转另一个组件, 这只能用代码，调用rourter.push() 方法。 当们把router 注入到根实例中后，组件中通过 this.$router 可以获取到router, 所以在组件中使用\r\n\r\nthis.$router.push(\"home\"), 就可以跳转到home界面\r\n                <code>\r\n            ` }\r\n    ],\r\n    spcData: { img: ['./static/imges/toppic01.jpg', './static/imges/b05.jpg'], mes: ['flex弹性盒子布局', '常用正则表达式'], router: [] },\r\n    listData: [\r\n        {\r\n            title: 'Node.js 搭建使用流程', imgType: 'smImg', imgUrl: './static/imges/v2.jpg',\r\n            mes: `作为一个从业三年左右的，并且从事过半年左右JAVA开发工作的前端，对于后台，尤其是对以js语言进行开发的nodejs，那是比较有兴趣的，所以再次记录一下原生写法(不用express)方便以后复习！\r\n            今天主要记录一下，很久以前用nodejs制作一个简单的服务监听程序的一些过程！\r\n            <code style=${codeStyle}>var http = require('http');\r\n            http.createServer(function (req, res) {\r\n              res.writeHead(200, {'Content-Type': 'text/plain'});\r\n              res.end('Hello World');\r\n            }).listen(1337, '127.0.0.1');\r\n            console.log('Server running at http://127.0.0.1:1337/');\r\n            </code>\r\n            大家都知道，通过nodejs可以对前台请求进行监听，这里就放一个官网的hello world例子吧：\r\n            以上代码相信了解过node的童鞋应该都会比较熟悉！\r\n            那么node既然可以监听请求，那么是不是就可以根据前台的不同请求返回不同的文件或内容？这不就是一个简单的服务器了么！抱着这样的想法，简单实验了一下，我们都知道，服务器可以根据请求的文件不同，会使用相应mine类型的！比如../index.css使用的mine类型就是text/css！那么，我们是不是应该有个常用mine类型的一个简单配置？这里，做了个简单的mine配置文件mine.js，用json来存放一下常用的格式：\r\n            <code style=${codeStyle}>\r\n            exports.types = {\r\n                \"css\": \"text/css\",\r\n                \"gif\": \"image/gif\",\r\n                \"html\": \"text/html\",\r\n                \"ico\": \"image/x-icon\",\r\n                \"jpeg\": \"image/jpeg\",\r\n                \"jpg\": \"image/jpeg\",\r\n                \"js\": \"text/javascript\",\r\n                \"json\": \"application/json\",\r\n                \"pdf\": \"application/pdf\",\r\n                \"png\": \"image/png\",\r\n                \"svg\": \"image/svg+xml\",\r\n                \"swf\": \"application/x-shockwave-flash\",\r\n                \"tiff\": \"image/tiff\",\r\n                \"txt\": \"text/plain\",\r\n                \"wav\": \"audio/x-wav\",\r\n                \"wma\": \"audio/x-ms-wma\",\r\n                \"wmv\": \"video/x-ms-wmv\",\r\n                \"xml\": \"text/xml\"\r\n            };\r\n            </code>\r\n            当然，除了这些以外还有很多其他格式，这里就不一一举例了！\r\n            好了，有了mine格式对应的文件配置文件，接下来就简单了，首先得根据官网例子搭建一个监听程序，然后在监听程序中添加一下简单的www.baidu.com/这个样的链接默认打开文件的处理，以及相对链接的补全等！当然还得做一下简单的错误处理，如404，500等！具体看代码：\r\n            <code style=${codeStyle}>\r\n            /*\r\n            *搭建http服务器，监听http请求\r\n            */\r\n            var http = require(\"http\"),\r\n            fs = require('fs'),\r\n            path = require('path'),\r\n            mine = require('./mine').types;\r\n            url = require('url');\r\n            //定义简单的工具\r\n            //获取当前时间\r\n            var date = function(ms) {\r\n                var date = ms ? new Date(ms) : new Date(),\r\n                mon = date.getMonth() >= 10 + 1 ? '-' : '-0',\r\n                d = date.getDate() >= 10 ? '-' : '-0',\r\n                hour = date.getHours() >= 10 ? ' ' : ' 0',\r\n                min = date.getMinutes() >= 10 ? ':' : ':0',\r\n                sec = date.getSeconds() >= 10 ? ':' : ':0';\r\n                return date.getFullYear() + mon + (date.getMonth() + 1) + d + date.getDate() + hour + date.getHours() + min + date.getMinutes() + sec + date.getSeconds();\r\n            },\r\n            //定义输出log日志方法，带上时间，方便调试\r\n            DebugLog = function(mes) {\r\n                var now = date();\r\n                console.log(now + \" \" + mes);\r\n            };\r\n            //服务监听\r\n            exports.server = function() {\r\n                http.createServer(function(req, res) {\r\n                    var pathname = url.parse(req.url).pathname,//获取url中的文件名\r\n                    pathname = (pathname !== \"/\" && pathname) ? pathname : \"/index.html\";//处理链接以'/'结尾的情况\r\n                    var realPath = path.join(\"../\", path.normalize(pathname.replace(/\\.\\./g, \"\"))),//将链接转换成物理路径\r\n                    ext = path.extname(realPath);\r\n                    ext = ext ? ext.slice(1) : 'unknown';//获取文件扩展名\r\n                    //查找文件\r\n                    fs.exists(realPath, function (exists) {\r\n                        if (!exists) {//处理404\r\n                            res.writeHead(404, {\r\n                                'Content-Type': 'text/plain'\r\n                            });\r\n            \r\n                            res.write(\"This request URL \" + pathname + \" was not found on this server.\");\r\n                            res.end();\r\n                        } else {//读取文件\r\n                            fs.readFile(realPath, \"binary\", function (err, file) {\r\n                                if (err) {//程序出错报500错误\r\n                                    res.writeHead(500, {\r\n                                        'Content-Type': 'text/plain'\r\n                                    });\r\n                                    res.end(err);\r\n                                } else {//正常返回文件\r\n                                    var contentType = mine[ext] || \"text/plain\";//根据mine.js中的配置设置对应的contentType\r\n                                    res.writeHead(200, {\r\n                                        'Content-Type': contentType\r\n                                    });\r\n                                    res.write(file, \"binary\");\r\n                                    res.end();\r\n                                }\r\n                            });     \r\n                        }\r\n                    });\r\n                }).listen(8888, 'localhost');\r\n                tool.DebugLog(\"http服务启动，开始监听127.0.0.1:8888的http请求！\");\r\n            }\r\n            </code>        \r\n            ok，代码到这里基本就结束了，当然这只是最简单的功能，大家可以自己去丰富！\r\n            `,\r\n\r\n            user: 'Luffy', textType: '学无止境', creatTime: '2017-6-13', reader: 3441, great: 9999\r\n        },\r\n        {\r\n            title: '个人常用', imgType: 'bigImg', imgUrl: './static/imges/t01.jpg',\r\n            mes: `\r\n            <code style=${codeStyle}>\r\n            初始化样式\r\n                body,ol,ul,h1,h2,h3,h4,h5,h6,p,th,td,dl,dd,form,fieldset,legend,input,textarea,select{margin:0;padding:0;user-select: none;}    \r\n                html,body{font-size: 100px;;width: 100%;height: 100%;overflow: hidden;width: 100%;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);}    \r\n                /* html,body{font-family: 'HansHandItalic';font-size: 100px;;width: 100%;height: 100%;overflow: hidden;}     */\r\n                a{text-decoration:none}    \r\n                em{font-style:normal}    \r\n                li{list-style:none}    \r\n                img{border:0;}    \r\n                table{border-collapse:collapse;border-spacing:0}    \r\n                p{word-wrap:break-word}   \r\n                iframe{border: none}\r\n            \r\n            配置本地接口路由代理node\r\n                proxyTable: {\r\n                    '/node': {\r\n                    target: 'http://192.168.0.69:4000',\r\n                    changeOrigin: true,\r\n                    pathRewrite: {\r\n                        '^/node': ''\r\n                    }\r\n                },\r\n                },\r\n\r\n                // Various Dev Server settings\r\n                host: '192.168.0.69', // can be overwritten by process.env.HOST\r\n                \r\n\r\n                                \r\n            VUE配置全局样式\r\n                build/utils.js下面配置\r\n                scss: generateLoaders('sass').concat(\r\n                    {\r\n                        loader: 'sass-resources-loader',\r\n                        options: {\r\n                        resources: path.resolve(__dirname, '../themes/gy.scss')\r\n                        }\r\n                    }\r\n                    ),\r\n\r\n                sass-resources-loader 记得install 依赖\r\n\r\n\r\n\r\n\r\n\r\n                2201817617   ★QQ\r\n\r\n\r\n                            \r\n\r\n            wnidow.addEventListener('touchmove', func, { passive: false})   移动端阻止默认事件\r\n\r\n\r\n            通过设置css属性 -webkit-tap-highlight-color: rgba(0, 0, 0, 0);取消掉手机端webkit浏览器 点击按钮或超链接之类的 默认灰色背景色 \r\n            区域性 overflow: scroll | auto 滚动时使用原生效果：-webkit-overflow-scrolling: touch （ios8+，Android4.0+）\r\n            \r\n\r\n\r\n\r\n            pointer-events:none  /  auto      事件冒泡点击\r\n            opacity:0     元素透明度\r\n\r\n            radial-gradient(circle, #666 10%, transparent 10.01%)\r\n            circle = 指定圆形的径向渐变\r\n\r\n\r\n            transition:width 3s    过渡效果\r\n\r\n\r\n            transform: scale(10, 10); 放大   rotate(360deg);旋转2d\r\n\r\n\r\n            :active   点击激活后触发CSS\r\n\r\n            transparent 100%  颜色透明\r\n\r\n\r\n            animation: always-movie infinite  linear   动画名称，几秒，永动，匀速运动\r\n\r\n            let a=[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\"]\r\n                a.forEach((listVal)=>{\r\n                    console.log(listVal);\r\n                })\r\n\r\n\r\n            display:flex   布局属性 https://www.cnblogs.com/qingchunshiguang/p/8011103.html\r\n\r\n\r\n            http://www.php.cn/course/600.html    ES6\r\n\r\n\r\n            <style scoped>  局部范围样式\r\n\r\n            display: -webkit-box;\r\n                    -webkit-box-orient: vertical;\r\n                    -webkit-line-clamp: 2;\r\n                    text-overflow: ellipsis;\r\n                    overflow: hidden;                指定行数文本溢出处理\r\n\r\n\r\n            https://www.cnblogs.com/qingchunshiguang/p/8011103.html   布局属性\r\n            https://blog.csdn.net/ermaner666/article/details/78995234    vue脚手架正确流程\r\n            https://www.cnblogs.com/SamWeb/p/6610733.html              vue路由详解\r\n            https://segmentfault.com/a/1190000012015742                     vuex详解\r\n            https://blog.csdn.net/u012860063/article/details/68063919    vue全家桶学习资源\r\n            https://www.jb51.net/article/113003.htm                               vux样式库组件配置安装\r\n            https://www.cnblogs.com/baihuaxiu/p/6654496.html            移动web开放注意事项\r\n            https://www.jb51.net/tools/zhengze.html                              正则表达式\r\n            http://bbs.boniu6668.com/thread-35195-1-1.html                 常用正则表达式\r\n            http://www.17sucai.com/pins/tag/3886.html                         花了5块钱的！！！\r\n            https://www.cnblogs.com/yuanke/archive/2016/02/26/5221853.html     formitable中文API\r\n            https://blog.csdn.net/hjh15827475896/article/details/78207066  VUE资源集合\r\n\r\n\r\n            https://tinypng.com/           图片压缩网站\r\n            .\r\n\r\n            https://www.bilibili.com/video/av19641847/?p=2                   node\r\n\r\n            <code>\r\n            `,\r\n            user: 'Luffy', textType: '享受生活', creatTime: '2018-7-13', reader: 8888, great: 9999\r\n        },\r\n        {\r\n            title: 'Flex弹性盒子', imgType: 'noImg', imgUrl: '',\r\n            mes: '啊啊啊f，else if 来判断，输出。思路已打开，样式调用就可以多样化啦来判断，输出。思路已打开，样式调用就可以多样化啦',\r\n            user: 'Luffy', textType: '学无止境', creatTime: '2016-11-13', reader: 8888, great: 9999\r\n        },\r\n        {\r\n            title: 'node环境mongoDB基础使用', imgType: 'smImg', imgUrl: './static/imges/zd02.jpg',\r\n            mes: '、增加标签模板，用if，else if 来判断，输出。思路已打开，样式调用就可以多样化啦来判断，输出。思路已打开，样式调用就可以多样化啦',\r\n            user: 'Luffy', textType: '学无止境', creatTime: '2017-4-13', reader: 2367, great: 9999\r\n        },\r\n\r\n        {\r\n            title: 'Noade.js 搭建使用流程', imgType: 'smImg', imgUrl: './static/imges/v2.jpg',\r\n            mes: '如图，要实现上图效果，我采用如下方法：1、首先在数据库模型，增加字段，分别是图片2，图片3。2、增加标签模板，用if，else if 来判断，输出。思路已打开，样式调用就可以多样化啦来判断，输出。思路已打开，样式调用就可以多样化啦',\r\n            user: 'Luffy', textType: '学无止境', creatTime: '2017-6-13', reader: 3441, great: 9999\r\n        },\r\n        {\r\n            title: 'Just do it', imgType: 'bigImg', imgUrl: './static/imges/t01.jpg',\r\n            mes: '增加标签模板，用if，else if 来判断，输出签模板，用if，else if 来判断，输出。思路已打开，样式调用就可以多样化啦来判断，输出。思路已打开，样式调用就可以多样化啦',\r\n            user: 'Luffy', textType: '享受生活', creatTime: '2018-7-13', reader: 8888, great: 9999\r\n        },\r\n        {\r\n            title: 'Flex弹性盒子', imgType: 'noImg', imgUrl: '',\r\n            mes: '啊啊啊f，else if 来判断，输出。思路已打开，样式调用就可以多样化啦来判断，输出。思路已打开，样式调用就可以多样化啦',\r\n            user: 'Luffy', textType: '学无止境', creatTime: '2016-11-13', reader: 8888, great: 9999\r\n        },\r\n        {\r\n            title: 'node环境mongoDB基础使用', imgType: 'smImg', imgUrl: './static/imges/zd02.jpg',\r\n            mes: '、增加标签模板，用if，else if 来判断，输出。思路已打开，样式调用就可以多样化啦来判断，输出。思路已打开，样式调用就可以多样化啦',\r\n            user: 'Luffy', textType: '学无止境', creatTime: '2017-4-13', reader: 2367, great: 9999\r\n        }\r\n    ]\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/public/api.js"],"sourceRoot":""}